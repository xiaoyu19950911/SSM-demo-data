<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shxy.dao.ZtreeMapper">
	<resultMap id="BaseResultMap" type="com.shxy.model.Ztree">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="pid" property="pid" jdbcType="INTEGER" />
		<result column="sortvalue" property="sortvalue" jdbcType="VARCHAR" />
		<result column="file" property="file" jdbcType="VARCHAR" />
		<result column="open" property="open" jdbcType="TINYINT" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, name, pid, sortvalue, file, open
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from z_tree
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectall" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from z_tree
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from z_tree
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.shxy.model.Ztree">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into z_tree (id, name, pid,
		sortvalue, file, open
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{pid,jdbcType=INTEGER},
		#{sortvalue,jdbcType=VARCHAR}, #{file,jdbcType=VARCHAR}, #{open,jdbcType=TINYINT}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.shxy.model.Ztree">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into z_tree
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="sortvalue != null">
				sortvalue,
			</if>
			<if test="file != null">
				file,
			</if>
			<if test="open != null">
				open,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=INTEGER},
			</if>
			<if test="sortvalue != null">
				#{sortvalue,jdbcType=VARCHAR},
			</if>
			<if test="file != null">
				#{file,jdbcType=VARCHAR},
			</if>
			<if test="open != null">
				#{open,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.shxy.model.Ztree">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update z_tree
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=INTEGER},
			</if>
			<if test="sortvalue != null">
				sortvalue = #{sortvalue,jdbcType=VARCHAR},
			</if>
			<if test="file != null">
				file = #{file,jdbcType=VARCHAR},
			</if>
			<if test="open != null">
				open = #{open,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.shxy.model.Ztree">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update z_tree
		set name = #{name,jdbcType=VARCHAR},
		pid = #{pid,jdbcType=INTEGER},
		sortvalue = #{sortvalue,jdbcType=VARCHAR},
		file = #{file,jdbcType=VARCHAR},
		open = #{open,jdbcType=TINYINT}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>